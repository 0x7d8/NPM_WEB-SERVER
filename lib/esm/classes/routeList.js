var H=Object.create;var v=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var A=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var C=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var L=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of V(e))!w.call(t,n)&&n!==r&&v(t,n,{get:()=>e[n],enumerable:!(s=N(e,n))||s.enumerable});return t};var M=(t,e,r)=>(r=t!=null?H(q(t)):{},L(e||!t||!t.__esModule?v(r,"default",{value:t,enumerable:!0}):r,t));var I=C((j,E)=>{E.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});import*as a from"fs";var l=(t,e)=>(e=e||[],a.readdirSync(t).forEach(s=>{if(a.statSync(t+"/"+s).isDirectory())e=l(t+"/"+s,e);else{let n=t+"/"+s;e.push(n)}}),e),x=(t,e,r)=>(r=r||[],r=l(t,r).filter(s=>s.endsWith(e)),r);var c=M(I());import*as S from"path";import*as b from"fs";var o=t=>(t=t.replace(/\/{2,}/g,"/"),t.endsWith("/")&&t!=="/"?t.slice(0,-1):!t.startsWith("/")&&t!=="/"?`/${t}`:t),f=class{constructor(e,r){e=e!=null?e:[],r=r!=null?r:[],this.routes=e,this.events=r}event(e,r){return this.events.some(s=>s.event===e)?!1:this.events.push({event:e,code:r})-1}set(e,r,s){if(r=o(r),!c.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${c.default.join(", ")}`);return this.routes.some(n=>n.method===e&&n.path===r)?!1:this.routes.push({method:e,path:r,pathArray:r.split("/"),code:s,data:{addTypes:!1}})-1}static(e,r,s){var m,h,T;e=o(e);let n=(m=s==null?void 0:s.preload)!=null?m:!1,i=(h=s==null?void 0:s.remHTML)!=null?h:!1,$=(T=s==null?void 0:s.addTypes)!=null?T:!0,u=[];for(let p of l(r)){let d=p.replace(r,"");i&&(d=d.replace("/index.html","/").replace(".html",""));let y=o(d),g=this.routes.push({method:"STATIC",path:y,pathArray:y.split("/"),code:async()=>{},data:{addTypes:$,file:p}});n&&(this.routes[g-1].data.content=b.readFileSync(p)),u.push(g-1)}return u}load(e){let r=x(e,".js"),s=[];for(let n of r){let i=A(S.resolve(n));if(!(!("path"in i)||!("method"in i)||!("code"in i))){if(!c.default.includes(i.method))throw TypeError(`No Valid Request Type: ${i.method}
Possible Values: ${c.default.join(", ")}`);s.push(this.routes.push({method:i.method,path:o(i.path),pathArray:o(i.path).split("/"),code:i.code,data:{addTypes:!1}})-1)}}return s}list(){return{routes:this.routes,events:this.events}}};export{f as default,o as pathParser};
