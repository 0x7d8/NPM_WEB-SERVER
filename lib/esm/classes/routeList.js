var P=Object.create;var T=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var y=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+s+'" is not supported')});var $=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);var j=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of N(e))!V.call(s,i)&&i!==t&&T(s,i,{get:()=>e[i],enumerable:!(r=b(e,i))||r.enumerable});return s};var q=(s,e,t)=>(t=s!=null?P(H(s)):{},j(e||!s||!s.__esModule?T(t,"default",{value:s,enumerable:!0}):t,s));var A=$((M,v)=>{v.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});import*as n from"fs";var c=(s,e)=>(e=e||[],n.readdirSync(s).forEach(r=>{if(n.statSync(s+"/"+r).isDirectory())e=c(s+"/"+r,e);else{let i=s+"/"+r;e.push(i)}}),e),g=(s,e,t)=>(t=t||[],t=c(s,t).filter(r=>r.endsWith(e)),t);var o=q(A());import*as E from"path";import*as S from"fs";var d=class{constructor(e,t){e=e!=null?e:[],t=t!=null?t:[],this.routes=e,this.events=t}event(e,t){this.events.push({event:e,code:t})}set(e,t,r){if(!o.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${o.default.join(", ")}`);this.routes.push({method:e,path:t,pathArray:t.split("/"),code:r,data:{addTypes:!1}})}static(e,t,r){var h,m,u;let i=(h=r==null?void 0:r.preload)!=null?h:!1,f=(m=r==null?void 0:r.remHTML)!=null?m:!1,x=(u=r==null?void 0:r.addTypes)!=null?u:!0;for(let p of c(t)){let a=p.replace(t,""),l="";a.replace("/","")==="index.html"&&f?l=e.replace("//","/"):a.replace("/","").endsWith(".html")&&f?l=(e+a).replace("//","/").replace(".html",""):l=(e+a).replace("//","/");let I=this.routes.push({method:"STATIC",path:l,pathArray:l.split("/"),code:async()=>null,data:{addTypes:x,file:p}});i&&(this.routes[I].data.content=S.readFileSync(p))}}load(e){let t=g(e,".js");for(let r of t){let i=y(E.resolve(r));if(!(!("path"in i)||!("type"in i)||!("code"in i))){if(!o.default.includes(i.type))throw TypeError(`No Valid Request Type: ${i.type}
Possible Values: ${o.default.join(", ")}`);this.routes.push({method:i.type,path:i.path,pathArray:i.path.split("/"),code:i.code,data:{addTypes:!1}})}}}list(){return{routes:this.routes,events:this.events}}};export{d as default};
