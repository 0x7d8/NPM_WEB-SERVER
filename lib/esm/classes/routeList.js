var N=Object.create;var v=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var V=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var A=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var C=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var L=(t,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of H(e))!q.call(t,i)&&i!==r&&v(t,i,{get:()=>e[i],enumerable:!(s=W(e,i))||s.enumerable});return t};var M=(t,e,r)=>(r=t!=null?N(V(t)):{},L(e||!t||!t.__esModule?v(r,"default",{value:t,enumerable:!0}):r,t));var I=C((D,E)=>{E.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});import*as c from"fs";var a=(t,e)=>(e=e||[],c.readdirSync(t).forEach(s=>{if(c.statSync(t+"/"+s).isDirectory())e=a(t+"/"+s,e);else{let i=t+"/"+s;e.push(i)}}),e),x=(t,e,r)=>(r=r||[],r=a(t,r).filter(s=>s.endsWith(e)),r);var l=M(I());import*as P from"path";import*as S from"fs";var u=t=>(t=t.replace(/\/{2,}/g,"/"),t.endsWith("/")&&t!=="/"?t.slice(0,-1):!t.startsWith("/")&&t!=="/"?`/${t}`:t),m=class{constructor(e,r){e=e!=null?e:[],r=r!=null?r:[],this.routes=e,this.events=r}event(e,r){return this.events.some(s=>s.event===e)?!1:this.events.push({event:e,code:r})-1}set(e,r,s){if(r=u(r),!l.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${l.default.join(", ")}`);return this.routes.some(i=>i.method===e&&i.path===r)?!1:this.routes.push({method:e,path:r,pathArray:r.split("/"),code:s,data:{addTypes:!1}})-1}static(e,r,s){var f,h,T;e=u(e);let i=(f=s==null?void 0:s.preload)!=null?f:!1,n=(h=s==null?void 0:s.remHTML)!=null?h:!1,$=(T=s==null?void 0:s.addTypes)!=null?T:!0,p=[];for(let d of a(r)){let o=d.replace(r,"").replace("/",""),b=e+r.replace(o,"").replace(r,"").slice(0,-1);n&&o==="index.html"?o="":n&&o.endsWith(".html")?o.slice(0,-5):n&&o.endsWith(".htm")&&o.slice(0,-4);let y=u(`${b}/${o}`),g=this.routes.push({method:"STATIC",path:y,pathArray:y.split("/"),code:async()=>{},data:{addTypes:$,file:d}});i&&(this.routes[g-1].data.content=S.readFileSync(d)),p.push(g-1)}return p}load(e){let r=x(e,".js"),s=[];for(let i of r){let n=A(P.resolve(i));if(!(!("path"in n)||!("method"in n)||!("code"in n))){if(!l.default.includes(n.method))throw TypeError(`No Valid Request Type: ${n.method}
Possible Values: ${l.default.join(", ")}`);s.push(this.routes.push({method:n.method,path:n.path,pathArray:n.path.split("/"),code:n.code,data:{addTypes:!1}}))-1}}return s}list(){return{routes:this.routes,events:this.events}}};export{m as default,u as pathParser};
