var $=Object.create;var g=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var V=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var b=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,s)=>(typeof require<"u"?require:e)[s]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var C=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var L=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of H(e))!q.call(t,i)&&i!==s&&g(t,i,{get:()=>e[i],enumerable:!(r=j(e,i))||r.enumerable});return t};var M=(t,e,s)=>(s=t!=null?$(V(t)):{},L(e||!t||!t.__esModule?g(s,"default",{value:t,enumerable:!0}):s,t));var A=C((w,x)=>{x.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});import*as l from"fs";var p=(t,e)=>(e=e||[],l.readdirSync(t).forEach(r=>{if(l.statSync(t+"/"+r).isDirectory())e=p(t+"/"+r,e);else{let i=t+"/"+r;e.push(i)}}),e),v=(t,e,s)=>(s=s||[],s=p(t,s).filter(r=>r.endsWith(e)),s);var c=M(A());import*as a from"path";import*as E from"fs";var I=t=>(t=t.replace(/\/{2,}/g,"/"),t.endsWith("/")&&t!=="/"?t.slice(0,-1):!t.startsWith("/")&&t!=="/"?`/${t}`:t),f=class{constructor(e,s){e=e!=null?e:[],s=s!=null?s:[],this.routes=e,this.events=s}event(e,s){return this.events.some(r=>r.event===e)?!1:this.events.push({event:e,code:s})-1}set(e,s,r){if(s=I(s),!c.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${c.default.join(", ")}`);return this.routes.some(i=>i.method===e&&i.path===s)?!1:this.routes.push({method:e,path:s,pathArray:s.split("/"),code:r,data:{addTypes:!1}})-1}static(e,s,r){var m,u,T;e=I(e);let i=(m=r==null?void 0:r.preload)!=null?m:!1,n=(u=r==null?void 0:r.remHTML)!=null?u:!1,S=(T=r==null?void 0:r.addTypes)!=null?T:!0,h=[];for(let d of p(s)){let o=a.parse(d.replace(s,""));n&&o.base==="index.html"?o.base="":n&&o.ext===".html"?o.base=o.base.slice(0,-5):n&&o.ext===".htm"&&(o.base=o.base.slice(0,-4));let y=this.routes.push({method:"STATIC",path:a.join(o.dir,o.base),pathArray:a.join(o.dir,o.base).split("/"),code:async()=>{},data:{addTypes:S,file:d}});i&&(this.routes[y-1].data.content=E.readFileSync(d)),h.push(y-1)}return h}load(e){let s=v(e,".js"),r=[];for(let i of s){let n=b(a.resolve(i));if(!(!("path"in n)||!("method"in n)||!("code"in n))){if(!c.default.includes(n.method))throw TypeError(`No Valid Request Type: ${n.method}
Possible Values: ${c.default.join(", ")}`);r.push(this.routes.push({method:n.method,path:n.path,pathArray:n.path.split("/"),code:n.code,data:{addTypes:!1}}))-1}}return r}list(){return{routes:this.routes,events:this.events}}};export{f as default,I as pathParser};
