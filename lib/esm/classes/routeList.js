var W=Object.create;var A=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var x=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,s)=>(typeof require<"u"?require:e)[s]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var L=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var M=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of V(e))!C.call(t,i)&&i!==s&&A(t,i,{get:()=>e[i],enumerable:!(r=H(e,i))||r.enumerable});return t};var j=(t,e,s)=>(s=t!=null?W(q(t)):{},M(e||!t||!t.__esModule?A(s,"default",{value:t,enumerable:!0}):s,t));var S=L((P,I)=>{I.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});import*as a from"fs";var l=(t,e)=>(e=e||[],a.readdirSync(t).forEach(r=>{if(a.statSync(t+"/"+r).isDirectory())e=l(t+"/"+r,e);else{let i=t+"/"+r;e.push(i)}}),e),E=(t,e,s)=>(s=s||[],s=l(t,s).filter(r=>r.endsWith(e)),s);var c=j(S());import*as f from"path";import*as $ from"fs";var d=t=>(t=t.replace(/\/{2,}/g,"/"),t.endsWith("/")&&t!=="/"?t.slice(0,-1):!t.startsWith("/")&&t!=="/"?`/${t}`:t),m=class{constructor(e,s){e=e!=null?e:[],s=s!=null?s:[],this.routes=e,this.events=s}event(e,s){return this.events.some(r=>r.event===e)?!1:this.events.push({event:e,code:s})-1}set(e,s,r){if(s=d(s),!c.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${c.default.join(", ")}`);return this.routes.some(i=>i.method===e&&i.path===s)?!1:this.routes.push({method:e,path:s,pathArray:s.split("/"),code:r,data:{addTypes:!1}})-1}static(e,s,r){var h,T,y;e=d(e);let i=(h=r==null?void 0:r.preload)!=null?h:!1,n=(T=r==null?void 0:r.remHTML)!=null?T:!1,b=(y=r==null?void 0:r.addTypes)!=null?y:!0,u=[];for(let p of l(s)){let o=p.replace(s,"").replace("/",""),N=f+s.replace(o,"").replace(s,"").slice(0,-1);n&&o==="index.html"?o="":n&&o.endsWith(".html")?o.slice(0,-5):n&&o.endsWith(".htm")&&o.slice(0,-4);let g=d(`${N}/${o}`),v=this.routes.push({method:"STATIC",path:g,pathArray:g.split("/"),code:async()=>{},data:{addTypes:b,file:p}});i&&(this.routes[v-1].data.content=$.readFileSync(p)),u.push(v-1)}return u}load(e){let s=E(e,".js"),r=[];for(let i of s){let n=x(f.resolve(i));if(!(!("path"in n)||!("method"in n)||!("code"in n))){if(!c.default.includes(n.method))throw TypeError(`No Valid Request Type: ${n.method}
Possible Values: ${c.default.join(", ")}`);r.push(this.routes.push({method:n.method,path:n.path,pathArray:n.path.split("/"),code:n.code,data:{addTypes:!1}}))-1}}return r}list(){return{routes:this.routes,events:this.events}}};export{m as default,d as pathParser};
