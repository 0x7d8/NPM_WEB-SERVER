var $=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});import*as c from"fs";var d=(r,e)=>(e=e||[],c.readdirSync(r).forEach(s=>{if(c.statSync(`${r}/${s}`).isDirectory())e=d(`${r}/${s}`,e);else{let o=`${r}/${s}`;e.push(o)}}),e),v=(r,e,t)=>(t=t||[],t=d(r,t).filter(s=>s.endsWith(e)),t);var a=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"];import*as A from"path";import*as b from"fs";var i=(r,e)=>(r=r.replace(/\/{2,}/g,"/"),r.endsWith("/")&&r!=="/"?r.slice(0,-1):!r.startsWith("/")&&r!=="/"?`/${r}`:r.includes("/?")?r.replace("/?","?"):e&&r==="/"?"":r),p=class{constructor(e,t){e=e!=null?e:[],t=t!=null?t:[],this.routes=e,this.events=t}event(e,t){return this.events.some(s=>s.event===e)?!1:this.events.push({event:e,code:t})-1}set(e,t,s){if(t=i(t),!a.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${a.join(", ")}`);return this.routes.some(o=>o.method===e&&o.path===t)?!1:this.routes.push({method:e,path:t,pathArray:t.split("/"),code:s,data:{addTypes:!1}})-1}setBlock(e,t){e=i(e);let s=[];for(let o=0;o<=t.length-1;o++){let n=t[o];s.push(this.routes.push({method:n.method,path:`${e}${i(n.path,!0)}`,pathArray:`${e}${i(n.path,!0)}`.split("/"),code:n.code,data:{addTypes:!1}})-1)}return s}static(e,t,s){var f,h,T;e=i(e);let o=(f=s==null?void 0:s.preload)!=null?f:!1,n=(h=s==null?void 0:s.remHTML)!=null?h:!1,I=(T=s==null?void 0:s.addTypes)!=null?T:!0,m=[];for(let l of d(t)){let u=l.replace(t,"");n&&(u=u.replace("/index.html","/").replace(".html",""));let y=i(u),g=this.routes.push({method:"STATIC",path:y,pathArray:y.split("/"),code:async()=>{},data:{addTypes:I,file:l}});o&&(this.routes[g-1].data.content=b.readFileSync(l)),m.push(g-1)}return m}load(e){let t=v(e,".js"),s=[];for(let o of t){let n=$(A.resolve(o));if(!(!("path"in n)||!("method"in n)||!("code"in n))){if(!a.includes(n.method))throw TypeError(`No Valid Request Type: ${n.method}
Possible Values: ${a.join(", ")}`);s.push(this.routes.push({method:n.method,path:i(n.path),pathArray:i(n.path).split("/"),code:n.code,data:{addTypes:!1}})-1)}}return s}list(){return{routes:this.routes,events:this.events}}};export{p as default,i as pathParser};
