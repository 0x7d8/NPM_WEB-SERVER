"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,i){void 0===i&&(i=r);var l=Object.getOwnPropertyDescriptor(t,r);l&&!("get"in l?!t.__esModule:l.writable||l.configurable)||(l={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,i,l)}:function(e,t,r,i){void 0===i&&(i=r),e[i]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const getAllFiles_1=require("../misc/getAllFiles"),types_1=__importDefault(require("../misc/types")),path=__importStar(require("path")),fs=__importStar(require("fs"));class routeList{constructor(e){e=e??[],this.urls=e}set(e,t,r){if(!types_1.default.includes(e))throw TypeError(`No Valid Request Type: ${e}\nPossible Values: ${types_1.default.join(", ")}`);this.urls[e+t]={array:t.split("/"),addTypes:!1,path:t,type:e,code:r}}static(e,t,r){const i=r?.preload??!1,l=r?.remHTML??!1,s=r?.addTypes??!0;for(const r of(0,getAllFiles_1.getAllFiles)(t)){const a=r.replace(t,"");let o="";o="index.html"===a.replace("/","")&&l?e.replace("//","/"):a.replace("/","").endsWith(".html")&&l?(e+a).replace("//","/").replace(".html",""):(e+a).replace("//","/"),this.urls["GET"+o]={file:r,array:o.split("/"),addTypes:s,path:o,type:"STATIC"},i&&(this.urls["GET"+o].content=fs.readFileSync(r))}}load(e){const t=(0,getAllFiles_1.getAllFilesFilter)(e,".js");for(const e of t){const t=require(path.resolve(e));if("path"in t&&"type"in t&&"code"in t){if(!types_1.default.includes(t.type))throw TypeError(`No Valid Request Type: ${t.type}\nPossible Values: ${types_1.default.toString()}`);this.urls[t.type+t.path]={array:t.path.split("/"),addTypes:!1,path:t.path,type:t.type,code:t.code}}}}list(){return this.urls}}exports.default=routeList;