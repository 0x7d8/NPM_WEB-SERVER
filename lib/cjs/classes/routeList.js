var S=Object.create;var c=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var V=(r,e)=>{for(var t in e)c(r,t,{get:e[t],enumerable:!0})},A=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of R(e))!P.call(r,n)&&n!==t&&c(r,n,{get:()=>e[n],enumerable:!(s=N(e,n))||s.enumerable});return r};var f=(r,e,t)=>(t=r!=null?S(H(r)):{},A(e||!r||!r.__esModule?c(t,"default",{value:r,enumerable:!0}):t,r)),q=r=>A(c({},"__esModule",{value:!0}),r);var w={};V(w,{default:()=>u,pathParser:()=>i});module.exports=q(w);var d=f(require("fs")),l=(r,e)=>(e=e||[],d.readdirSync(r).forEach(s=>{if(d.statSync(`${r}/${s}`).isDirectory())e=l(`${r}/${s}`,e);else{let n=`${r}/${s}`;e.push(n)}}),e),b=(r,e,t)=>(t=t||[],t=l(r,t).filter(s=>s.endsWith(e)),t);var a=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"];var I=f(require("path")),x=f(require("fs")),i=(r,e)=>(r=r.replace(/\/{2,}/g,"/"),r.endsWith("/")&&r!=="/"?r.slice(0,-1):!r.startsWith("/")&&r!=="/"?`/${r}`:r.includes("/?")?r.replace("/?","?"):e&&r==="/"?"":r),u=class{constructor(e,t){e=e!=null?e:[],t=t!=null?t:[],this.routes=e,this.events=t}event(e,t){return this.events.some(s=>s.event===e)?!1:this.events.push({event:e,code:t})-1}set(e,t,s){if(t=i(t),!a.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${a.join(", ")}`);return this.routes.some(n=>n.method===e&&n.path===t)?!1:this.routes.push({method:e,path:t,pathArray:t.split("/"),code:s,data:{addTypes:!1}})-1}setBlock(e,t){e=i(e);let s=[];for(let n=0;n<=t.length-1;n++){let o=t[n];s.push(this.routes.push({method:o.method,path:`${e}${i(o.path,!0)}`,pathArray:`${e}${i(o.path,!0)}`.split("/"),code:o.code,data:{addTypes:!1}})-1)}return s}static(e,t,s){var T,y,g;e=i(e);let n=(T=s==null?void 0:s.preload)!=null?T:!1,o=(y=s==null?void 0:s.remHTML)!=null?y:!1,E=(g=s==null?void 0:s.addTypes)!=null?g:!0,h=[];for(let p of l(t)){let m=p.replace(t,"");o&&(m=m.replace("/index.html","/").replace(".html",""));let $=i(m),v=this.routes.push({method:"STATIC",path:$,pathArray:$.split("/"),code:async()=>{},data:{addTypes:E,file:p}});n&&(this.routes[v-1].data.content=x.readFileSync(p)),h.push(v-1)}return h}load(e){let t=b(e,".js"),s=[];for(let n of t){let o=require(I.resolve(n));if(!(!("path"in o)||!("method"in o)||!("code"in o))){if(!a.includes(o.method))throw TypeError(`No Valid Request Type: ${o.method}
Possible Values: ${a.join(", ")}`);s.push(this.routes.push({method:o.method,path:i(o.path),pathArray:i(o.path).split("/"),code:o.code,data:{addTypes:!1}})-1)}}return s}list(){return{routes:this.routes,events:this.events}}};0&&(module.exports={pathParser});
