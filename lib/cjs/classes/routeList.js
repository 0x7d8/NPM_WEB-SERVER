var R=Object.create;var d=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var V=(r,e)=>{for(var t in e)d(r,t,{get:e[t],enumerable:!0})},b=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of N(e))!P.call(r,n)&&n!==t&&d(r,n,{get:()=>e[n],enumerable:!(s=S(e,n))||s.enumerable});return r};var m=(r,e,t)=>(t=r!=null?R(H(r)):{},b(e||!r||!r.__esModule?d(t,"default",{value:r,enumerable:!0}):t,r)),q=r=>b(d({},"__esModule",{value:!0}),r);var w={};V(w,{default:()=>p,pathParser:()=>o});module.exports=q(w);var c=m(require("fs")),l=(r,e)=>(e=e||[],c.readdirSync(r).forEach(s=>{if(c.statSync(`${r}/${s}`).isDirectory())e=l(`${r}/${s}`,e);else{let n=`${r}/${s}`;e.push(n)}}),e),v=(r,e,t)=>(t=t||[],t=l(r,t).filter(s=>s.endsWith(e)),t);var a=["OPTIONS","DELETE","PATCH","STATIC","HEAD","POST","PUT","GET"];var x=m(require("path")),I=m(require("fs")),o=(r,e)=>(r=r.replace(/\/{2,}/g,"/"),r.endsWith("/")&&r!=="/"?r.slice(0,-1):!r.startsWith("/")&&r!=="/"?`/${r}`:r.includes("/?")?r.replace("/?","?"):e&&r==="/"?"":r),p=class{constructor(e,t){e=e!=null?e:[],t=t!=null?t:[],this.routes=e,this.events=t}event(e,t){return this.events.some(s=>s.event===e)?!1:this.events.push({event:e,code:t})-1}set(e,t,s){if(t=o(t),!a.includes(e))throw TypeError(`No Valid Request Type: ${e}, Possible Values: ${a.join(", ")}`);return this.routes.some(n=>n.method===e&&n.path===t)?!1:this.routes.push({method:e,path:t,pathArray:t.split("/"),code:s,data:{addTypes:!1}})-1}setBlock(e,t){e=o(e);let s=[];for(let n=0;n<=t.length-1;n++){let i=t[n];s.push(this.routes.push({method:i.method,path:`${e}${o(i.path,!0)}`,pathArray:`${e}${o(i.path,!0)}`.split("/"),code:i.code,data:{addTypes:!1}})-1)}return s}setRedirects(e){let t=[];for(let s=0;s<=e.length-1;s++){let n=e[s];t.push(this.routes.push({method:n.method,path:o(n.path),pathArray:o(n.path,!0).split("/"),code:async i=>i.redirect(n.destination),data:{addTypes:!1}})-1)}return t}static(e,t,s){var y,T,g;e=o(e);let n=(y=s==null?void 0:s.preload)!=null?y:!1,i=(T=s==null?void 0:s.remHTML)!=null?T:!1,E=(g=s==null?void 0:s.addTypes)!=null?g:!0,f=[];for(let u of l(t)){let h=u.replace(t,"");i&&(h=h.replace("/index.html","/").replace(".html",""));let $=o(h),A=this.routes.push({method:"STATIC",path:$,pathArray:$.split("/"),code:async()=>{},data:{addTypes:E,file:u}});n&&(this.routes[A-1].data.content=I.readFileSync(u)),f.push(A-1)}return f}load(e){let t=v(e,".js"),s=[];for(let n of t){let i=require(x.resolve(n));if(!(!("path"in i)||!("method"in i)||!("code"in i))){if(!a.includes(i.method))throw TypeError(`No Valid Request Type: ${i.method}, Possible Values: ${a.join(", ")}`);s.push(this.routes.push({method:i.method,path:o(i.path),pathArray:o(i.path).split("/"),code:i.code,data:{addTypes:!1}})-1)}}return s}list(){return{routes:this.routes,events:this.events}}};0&&(module.exports={pathParser});
