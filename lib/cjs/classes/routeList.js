var j=Object.create;var l=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var L=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),M=(t,e)=>{for(var s in e)l(t,s,{get:e[s],enumerable:!0})},x=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of V(e))!C.call(t,i)&&i!==s&&l(t,i,{get:()=>e[i],enumerable:!(r=H(e,i))||r.enumerable});return t};var p=(t,e,s)=>(s=t!=null?j(q(t)):{},x(e||!t||!t.__esModule?l(s,"default",{value:t,enumerable:!0}):s,t)),N=t=>x(l({},"__esModule",{value:!0}),t);var E=L((P,I)=>{I.exports=["OPTIONS","DELETE","PATCH","STATIC","POST","PUT","GET"]});var W={};M(W,{default:()=>h,pathParser:()=>u});module.exports=N(W);var d=p(require("fs")),f=(t,e)=>(e=e||[],d.readdirSync(t).forEach(r=>{if(d.statSync(t+"/"+r).isDirectory())e=f(t+"/"+r,e);else{let i=t+"/"+r;e.push(i)}}),e),A=(t,e,s)=>(s=s||[],s=f(t,s).filter(r=>r.endsWith(e)),s);var c=p(E()),a=p(require("path")),S=p(require("fs")),u=t=>(t=t.replace(/\/{2,}/g,"/"),t.endsWith("/")&&t!=="/"?t.slice(0,-1):!t.startsWith("/")&&t!=="/"?`/${t}`:t),h=class{constructor(e,s){e=e!=null?e:[],s=s!=null?s:[],this.routes=e,this.events=s}event(e,s){return this.events.some(r=>r.event===e)?!1:this.events.push({event:e,code:s})-1}set(e,s,r){if(s=u(s),!c.default.includes(e))throw TypeError(`No Valid Request Type: ${e}
Possible Values: ${c.default.join(", ")}`);return this.routes.some(i=>i.method===e&&i.path===s)?!1:this.routes.push({method:e,path:s,pathArray:s.split("/"),code:r,data:{addTypes:!1}})-1}static(e,s,r){var y,g,b;e=u(e);let i=(y=r==null?void 0:r.preload)!=null?y:!1,n=(g=r==null?void 0:r.remHTML)!=null?g:!1,$=(b=r==null?void 0:r.addTypes)!=null?b:!0,T=[];for(let m of f(s)){let o=a.parse(m.replace(s,""));n&&o.base==="index.html"?o.base="":n&&o.ext===".html"?o.base=o.base.slice(0,-5):n&&o.ext===".htm"&&(o.base=o.base.slice(0,-4));let v=this.routes.push({method:"STATIC",path:a.join(o.dir,o.base),pathArray:a.join(o.dir,o.base).split("/"),code:async()=>{},data:{addTypes:$,file:m}});i&&(this.routes[v-1].data.content=S.readFileSync(m)),T.push(v-1)}return T}load(e){let s=A(e,".js"),r=[];for(let i of s){let n=require(a.resolve(i));if(!(!("path"in n)||!("method"in n)||!("code"in n))){if(!c.default.includes(n.method))throw TypeError(`No Valid Request Type: ${n.method}
Possible Values: ${c.default.join(", ")}`);r.push(this.routes.push({method:n.method,path:n.path,pathArray:n.path.split("/"),code:n.code,data:{addTypes:!1}}))-1}}return r}list(){return{routes:this.routes,events:this.events}}};0&&(module.exports={pathParser});
